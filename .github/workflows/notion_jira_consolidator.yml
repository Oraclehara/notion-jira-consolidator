name: Notion Jira Consolidator (Full once, then Incremental)

on:
  workflow_dispatch: {}      # manual button for a full backfill
  schedule:
    - cron: "7 * * * *"      # hourly incrementals (UTC)

permissions:
  contents: read

concurrency:
  group: jira-notion-sync
  cancel-in-progress: true       # ← cancel older run when a new one starts

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 300         # ← give the full run room; incrementals will finish sooner anyway
    environment: prod-secrets    # ← attaches secrets from this Environment

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"           # ← speed up "Install deps" using requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure script is present & executable
        run: |
          test -f scripts/sync_jira_notionsrc.py
          chmod +x scripts/sync_jira_notionsrc.py

      # (Optional) quick sanity check so you never chase empty secrets again
      - name: Debug environment vars
        run: |
          echo "Checking secret availability"
          for v in NOTION_TOKEN CONSOLIDATED_DB_ID SYNC_CONTROL_PAGE_ID SOURCE_DB_IDS; do
            if [ -z "${!v}" ]; then echo "::error::$v is empty"; else echo "$v is set ✅"; fi
          done
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          CONSOLIDATED_DB_ID: ${{ secrets.CONSOLIDATED_DB_ID }}
          SYNC_CONTROL_PAGE_ID: ${{ secrets.SYNC_CONTROL_PAGE_ID }}
          SOURCE_DB_IDS: ${{ secrets.SOURCE_DB_IDS }}

      # FULL backfill: only when you press "Run workflow"
      - name: FULL backfill (one-time)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          CONSOLIDATED_DB_ID: ${{ secrets.CONSOLIDATED_DB_ID }}
          SYNC_CONTROL_PAGE_ID: ${{ secrets.SYNC_CONTROL_PAGE_ID }}
          SOURCE_DB_IDS: ${{ secrets.SOURCE_DB_IDS }}

          FORCE_FULL_SCAN: '1'
          FORCE_UPDATE_ALL: '1'

          MAX_PAGES_PER_RUN: '999999'
          PAGE_SIZE: '100'
          BATCH_SIZE: '10'
          SLEEP_SECS: '0.4'

          CHECKPOINT_EVERY_PAGE: '1'   # ← enables per-page watermark writes

          PYTHONUNBUFFERED: '1'
        run: |
          ( while true; do echo "heartbeat $(date -u +%H:%M:%S)"; sleep 60; done ) &
          HB_PID=$!
          stdbuf -oL -eL python -u scripts/sync_jira_notionsrc.py
          RC=$?
          kill $HB_PID || true
          exit $RC

      # Incremental: runs on the hourly schedule
      - name: Incremental (hourly)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          CONSOLIDATED_DB_ID: ${{ secrets.CONSOLIDATED_DB_ID }}
          SYNC_CONTROL_PAGE_ID: ${{ secrets.SYNC_CONTROL_PAGE_ID }}
          SOURCE_DB_IDS: ${{ secrets.SOURCE_DB_IDS }}

          FORCE_FULL_SCAN: ''
          FORCE_UPDATE_ALL: ''

          MAX_PAGES_PER_RUN: '800'     # ← smaller slices; reliable + resumable
          PAGE_SIZE: '100'
          BATCH_SIZE: '10'
          SLEEP_SECS: '0.4'

          CHECKPOINT_EVERY_PAGE: '1'   # ← keep for safe resume

          PYTHONUNBUFFERED: '1'
        run: |
          ( while true; do echo "heartbeat $(date -u +%H:%M:%S)"; sleep 60; done ) &
          HB_PID=$!
          stdbuf -oL -eL python -u scripts/sync_jira_notionsrc.py
          RC=$?
          kill $HB_PID || true
          exit $RC
